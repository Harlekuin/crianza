- genetic: keep the all-time best candidates somewhere; I tried printing them,
  and they seem to converge pretty fast. Also stop should not necessarily be on
  the average, only the very few best. Also, the score function should give
  more score to correctness, i.e. given a normally good score, a correctness
  test (func(input)==expected output) should give dramatically higher scores.
- make it possible to refer to source code locations on compile errors (just
    create a list with source locations for each op)
- vm: store program as list of native types, not list of strings
- vm: allow floats
- parser: allow negative numbers, "-123" parses as "-" "123"
- vm: fixnum arithmetic (as option)
- genetic: crossover subregions, not from start to end
- genetic: higher score to programs that terminate within steps
